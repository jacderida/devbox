---
- stat: path="{{ i3_install_path }}"
  register: i3_install_path_result

- name: 'install lightdm'
  apt:
    name: lightdm
    state: 'installed'
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: 'install ubuntu prerequisites'
  apt:
    name: "{{ item }}"
    state: 'installed'
  with_items:
    - autoconf
    - libev-dev
    - libpango1.0-dev
    - libstartup-notification0-dev
    - libxkbcommon-dev
    - libxkbcommon-x11-dev
    - libxcb-cursor-dev
    - libxcb-icccm4-dev
    - libxcb-keysyms1-dev
    - libxcb-randr0-dev
    - libxcb-util0-dev
    - libxcb-xinerama0-dev
    - libxcb-xkb-dev
    - libxcb1-dev
    - libyajl-dev
  when: ansible_distribution == 'Ubuntu'

- name: 'install debian prerequisites'
  apt:
    name: "{{ item }}"
    state: 'installed'
  with_items:
    - libev-dev
    - libpango1.0-dev
    - libstartup-notification0-dev
    - libxcb1-dev
    - libxcb-xkb-dev
    - libxcb-cursor-dev
    - libxcb-icccm4-dev
    - libxcb-keysyms1-dev
    - libxcb-randr0-dev
    - libxcb-xinerama0-dev
    - libxcb-util0-dev
    - libxcb-xrm-dev
    - libxcb-xrm0
    - libxkbcommon-dev
    - libxkbcommon-x11-dev
    - libyajl-dev
    - xcb
  when: ansible_distribution == 'Debian'

- name: 'clone i3gaps repo'
  git:
    repo: "{{ i3gaps_repo }}"
    dest: "{{ i3gaps_src_path }}"
    recursive: yes
  when: i3_install_path_result.stat.exists == False

- name: 'run autoreconf for i3gaps'
  command: 'autoreconf --force --install'
  args:
    chdir: "{{ i3gaps_src_path }}"
  when: i3_install_path_result.stat.exists == False

- name: 'create build directory for i3gaps'
  file:
    state: directory
    path: "{{ i3gaps_src_path }}/build"
  when: i3_install_path_result.stat.exists == False

- name: 'run configure for i3gaps'
  command: '../configure --prefix=/usr --sysconfdir=/etc --disable-sanitizers'
  args:
    chdir: "{{ i3gaps_src_path }}/build"
  when: i3_install_path_result.stat.exists == False

- name: 'compile i3gaps'
  make:
    chdir: "{{ i3gaps_src_path }}/build"
  when: i3_install_path_result.stat.exists == False

- name: 'install i3gaps'
  make:
    chdir: "{{ i3gaps_src_path }}/build"
    target: install
  when: i3_install_path_result.stat.exists == False

- name: 'clone i3blocks repo'
  git:
    repo: "{{ i3blocks_repo }}"
    dest: "{{ i3blocks_src_path }}"
    recursive: yes
  when: i3_install_path_result.stat.exists == False

- name: 'compile i3blocks'
  make:
    chdir: "{{ i3blocks_src_path }}"
    target: "{{ item }}"
  with_items:
    - all
    - clean
  when: i3_install_path_result.stat.exists == False

- name: 'install i3blocks'
  make:
    chdir: "{{ i3blocks_src_path }}"
    target: install
  when: i3_install_path_result.stat.exists == False

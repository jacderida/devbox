---
- stat: path="{{ i3_install_path }}"
  register: i3_install_path_result

- name: 'apt install lightdm'
  package:
    name: lightdm
    state: 'installed'
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: 'install ubuntu desktop'
  package:
    name: ubuntu-desktop
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: 'dnf install lightdm & xfce (can take ~10 minutes)'
  dnf:
    name: "{{ item }}"
    state: 'installed'
  with_items:
    - '@xfce-desktop-environment'
    - 'lightdm'
  when: ansible_distribution == 'Fedora'

- name: 'install ubuntu prerequisites'
  package:
    name: [
      'autoconf',
      'automake',
      'libev-dev',
      'libpango1.0-dev',
      'libstartup-notification0-dev',
      'libxkbcommon-dev',
      'libxkbcommon-x11-dev',
      'libxcb-cursor-dev',
      'libxcb-icccm4-dev',
      'libxcb-keysyms1-dev',
      'libxcb-randr0-dev',
      'libxcb-util0-dev',
      'libxcb-xinerama0-dev',
      'libxcb-xkb-dev',
      'libxcb-xrm0',
      'libxcb-xrm-dev',
      'libxcb1-dev',
      'libyajl-dev'
    ]
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: 'install debian prerequisites'
  apt:
    name: [
      'libev-dev',
      'libpango1.0-dev',
      'libstartup-notification0-dev',
      'libxcb1-dev',
      'libxcb-xkb-dev',
      'libxcb-cursor-dev',
      'libxcb-icccm4-dev',
      'libxcb-keysyms1-dev',
      'libxcb-randr0-dev',
      'libxcb-xinerama0-dev',
      'libxcb-util0-dev',
      'libxcb-xrm-dev',
      'libxcb-xrm0',
      'libxkbcommon-dev',
      'libxkbcommon-x11-dev',
      'libyajl-dev',
      'xcb'
    ]
    state: present
  when: ansible_distribution == 'Debian'

- name: 'install fedora prerequisites'
  dnf:
    name: [
      'autoconf',
      'automake',
      'gcc',
      'libev-devel',
      'libxkbcommon-devel',
      'libxkbcommon-x11-devel',
      'pango-devel',
      'startup-notification-devel',
      'xcb-util-devel',
      'xcb-util-cursor-devel',
      'xcb-util-keysyms-devel',
      'xcb-util-wm-devel',
      'xcb-util-xrm-devel',
      'yajl-devel'
    ]
    state: present
  when: ansible_distribution == 'Fedora'

- name: 'clone i3gaps repo'
  git:
    repo: "{{ i3gaps_repo }}"
    dest: "{{ i3gaps_src_path }}"
    recursive: yes
  when: i3_install_path_result.stat.exists == False

- name: 'run autoreconf for i3gaps'
  command: 'autoreconf --force --install'
  args:
    chdir: "{{ i3gaps_src_path }}"
  when: i3_install_path_result.stat.exists == False

- name: 'create build directory for i3gaps'
  file:
    state: directory
    path: "{{ i3gaps_src_path }}/build"
  when: i3_install_path_result.stat.exists == False

- name: 'run configure for i3gaps'
  command: '../configure --prefix=/usr --sysconfdir=/etc --disable-sanitizers'
  args:
    chdir: "{{ i3gaps_src_path }}/build"
  when: i3_install_path_result.stat.exists == False

- name: 'compile i3gaps'
  make:
    chdir: "{{ i3gaps_src_path }}/build"
  when: i3_install_path_result.stat.exists == False

- name: 'install i3gaps'
  make:
    chdir: "{{ i3gaps_src_path }}/build"
    target: install
  when: i3_install_path_result.stat.exists == False

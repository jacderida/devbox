---
- stat: path="{{ rofi_install_path }}"
  register: rofi_install_path_result

- name: 'install debian/ubuntu prerequisites'
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - autoconf
    - bison
    - flex
    - libglib2.0-dev
    - libpango1.0-dev
    - librsvg2-dev
    - libstartup-notification0-dev
    - libxkbcommon-dev
    - libxkbcommon-x11-dev
    - libxcb-ewmh-dev
    - libxcb-icccm4-dev
    - libxcb-randr0-dev
    - libxcb-xinerama0-dev
    - libxcb-xrm-dev
    - pkg-config
    - texinfo
  when:
    - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    - rofi_install_path_result.stat.exists == False

- name: 'install ubuntu only prerequisites'
  package:
    item: libxcb-util-dev
    state: present
  when:
    - ansible_distribution == 'Ubuntu'

- include: check.yml
  when:
    - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    - rofi_install_path_result.stat.exists == False

- name: 'install fedora prerequisites'
  dnf:
    name: "{{ item }}"
    state: 'installed'
  with_items:
    - bison
    - check-devel
    - flex
    - gcc
    - glib2-devel
    - librsvg2-devel
    - libxcb-devel
    - libxkbcommon-devel
    - libxkbcommon-x11-devel
    - pango-devel
    - startup-notification-devel
    - xcb-util-devel
    - xcb-util-wm-devel
    - xcb-util-xrm-devel
  when: ansible_distribution == 'Fedora'

- name: 'create rofi src directory'
  file:
    state: directory
    path: "{{ rofi_tmp_source_path }}"
  when: rofi_install_path_result.stat.exists == False

- name: 'get rofi'
  get_url:
    url: "{{ rofi_url }}"
    dest: "{{ rofi_tmp_archive_path }}"
  when: rofi_install_path_result.stat.exists == False

- name: 'extract source'
  unarchive:
    remote_src: yes
    src: "{{ rofi_tmp_archive_path }}"
    dest: /tmp
  when: rofi_install_path_result.stat.exists == False

- name: 'configure rofi'
  command: "./configure"
  args:
    chdir: "{{ rofi_tmp_source_path }}"
  when: rofi_install_path_result.stat.exists == False

- name: 'compile rofi'
  make:
    chdir: "{{ rofi_tmp_source_path }}"
  when: rofi_install_path_result.stat.exists == False

- name: 'install rofi'
  make:
    chdir: "{{ rofi_tmp_source_path }}"
    target: install
  when: rofi_install_path_result.stat.exists == False

- name: 'remove tmp files'
  file:
    state: absent
    path: "{{ item }}"
  with_items:
    - "{{ check_tmp_source_path }}"
    - "{{ rofi_tmp_source_path }}"
    - "{{ rofi_tmp_archive_path }}"
